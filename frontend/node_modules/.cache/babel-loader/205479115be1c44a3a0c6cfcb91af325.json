{"ast":null,"code":"var _jsxFileName = \"/home/maxwilson/Documents/git/dsmovie-app/frontend/src/components/MovieStars/index.tsx\";\nimport { ReactComponent as StarFull } from 'assets/img/star-full.svg';\nimport { ReactComponent as StarHalf } from 'assets/img/star-half.svg';\nimport { ReactComponent as StarEmpty } from 'assets/img/star-empty.svg';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction getFills(score) {\n  const fills = [0, 0, 0, 0, 0];\n  const integerPart = Math.floor(score);\n\n  for (let i = 0; i < integerPart; i++) {\n    fills[i] = 1;\n  }\n\n  const diff = score - integerPart;\n\n  if (diff > 0) {\n    fills[integerPart] = 0.5;\n  }\n\n  return fills;\n}\n\nfunction Star(_ref) {\n  let {\n    fill\n  } = _ref;\n\n  if (fill === 0) {\n    return /*#__PURE__*/_jsxDEV(StarEmpty, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 16\n    }, this);\n  } else if (fill === 1) {\n    return /*#__PURE__*/_jsxDEV(StarFull, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(StarHalf, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }, this);\n  }\n}\n\n_c = Star;\n\nfunction MovieStars(_ref2) {\n  let {\n    score\n  } = _ref2;\n  const fills = getFills(score);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dsmovie-stars-container\",\n    children: [/*#__PURE__*/_jsxDEV(Star, {\n      fill: fills[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Star, {\n      fill: fills[1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Star, {\n      fill: fills[2]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Star, {\n      fill: fills[3]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Star, {\n      fill: fills[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = MovieStars;\nexport default MovieStars;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Star\");\n$RefreshReg$(_c2, \"MovieStars\");","map":{"version":3,"names":["ReactComponent","StarFull","StarHalf","StarEmpty","getFills","score","fills","integerPart","Math","floor","i","diff","Star","fill","MovieStars"],"sources":["/home/maxwilson/Documents/git/dsmovie-app/frontend/src/components/MovieStars/index.tsx"],"sourcesContent":["import { ReactComponent as StarFull } from 'assets/img/star-full.svg';\nimport { ReactComponent as StarHalf } from 'assets/img/star-half.svg';\nimport { ReactComponent as StarEmpty } from 'assets/img/star-empty.svg';\nimport './styles.css';\n\ntype Props = {\n    score: number;\n}\n\ntype StarProps = {\n    fill: number;\n}\n\nfunction getFills(score: number) {\n\n    const fills = [0, 0, 0, 0, 0];\n\n    const integerPart = Math.floor(score);\n\n    for (let i = 0; i < integerPart; i++) {\n        fills[i] = 1;\n    }\n\n    const diff = score - integerPart;\n    if (diff > 0) {\n        fills[integerPart] = 0.5;\n    }\n\n    return fills;\n}\n\nfunction Star({ fill } : StarProps){\n    if(fill === 0){\n        return <StarEmpty/>\n    }\n    else if(fill === 1){\n        return <StarFull/>\n    }\n    else {\n        return<StarHalf/>\n    }\n}\n\nfunction MovieStars({ score }: Props) {\n\n    const fills = getFills(score);\n\n    return (\n        <div className=\"dsmovie-stars-container\">\n            <Star fill={fills[0]} />\n            <Star fill={fills[1]} />\n            <Star fill={fills[2]} />\n            <Star fill={fills[3]} />\n            <Star fill={fills[0]} />\n\n        </div>\n    )\n}\n\nexport default MovieStars;"],"mappings":";AAAA,SAASA,cAAc,IAAIC,QAA3B,QAA2C,0BAA3C;AACA,SAASD,cAAc,IAAIE,QAA3B,QAA2C,0BAA3C;AACA,SAASF,cAAc,IAAIG,SAA3B,QAA4C,2BAA5C;AACA,OAAO,cAAP;;;AAUA,SAASC,QAAT,CAAkBC,KAAlB,EAAiC;EAE7B,MAAMC,KAAK,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAAd;EAEA,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWJ,KAAX,CAApB;;EAEA,KAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,WAApB,EAAiCG,CAAC,EAAlC,EAAsC;IAClCJ,KAAK,CAACI,CAAD,CAAL,GAAW,CAAX;EACH;;EAED,MAAMC,IAAI,GAAGN,KAAK,GAAGE,WAArB;;EACA,IAAII,IAAI,GAAG,CAAX,EAAc;IACVL,KAAK,CAACC,WAAD,CAAL,GAAqB,GAArB;EACH;;EAED,OAAOD,KAAP;AACH;;AAED,SAASM,IAAT,OAAmC;EAAA,IAArB;IAAEC;EAAF,CAAqB;;EAC/B,IAAGA,IAAI,KAAK,CAAZ,EAAc;IACV,oBAAO,QAAC,SAAD;MAAA;MAAA;MAAA;IAAA,QAAP;EACH,CAFD,MAGK,IAAGA,IAAI,KAAK,CAAZ,EAAc;IACf,oBAAO,QAAC,QAAD;MAAA;MAAA;MAAA;IAAA,QAAP;EACH,CAFI,MAGA;IACD,oBAAM,QAAC,QAAD;MAAA;MAAA;MAAA;IAAA,QAAN;EACH;AACJ;;KAVQD,I;;AAYT,SAASE,UAAT,QAAsC;EAAA,IAAlB;IAAET;EAAF,CAAkB;EAElC,MAAMC,KAAK,GAAGF,QAAQ,CAACC,KAAD,CAAtB;EAEA,oBACI;IAAK,SAAS,EAAC,yBAAf;IAAA,wBACI,QAAC,IAAD;MAAM,IAAI,EAAEC,KAAK,CAAC,CAAD;IAAjB;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,QAAC,IAAD;MAAM,IAAI,EAAEA,KAAK,CAAC,CAAD;IAAjB;MAAA;MAAA;MAAA;IAAA,QAFJ,eAGI,QAAC,IAAD;MAAM,IAAI,EAAEA,KAAK,CAAC,CAAD;IAAjB;MAAA;MAAA;MAAA;IAAA,QAHJ,eAII,QAAC,IAAD;MAAM,IAAI,EAAEA,KAAK,CAAC,CAAD;IAAjB;MAAA;MAAA;MAAA;IAAA,QAJJ,eAKI,QAAC,IAAD;MAAM,IAAI,EAAEA,KAAK,CAAC,CAAD;IAAjB;MAAA;MAAA;MAAA;IAAA,QALJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAUH;;MAdQQ,U;AAgBT,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}